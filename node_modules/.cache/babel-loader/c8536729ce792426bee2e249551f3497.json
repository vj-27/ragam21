{"ast":null,"code":"var _jsxFileName = \"D:\\\\prgm\\\\Web-dev\\\\Ragam21\\\\r21\\\\ragam21\\\\src\\\\Screens\\\\MyRegistrationPage\\\\MyRegistrationPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from '../../Components/Header/Header';\nimport UserEvents from \"../../data1\";\nimport { Button, Form, Input } from \"antd\";\nimport useFitText from \"use-fit-text\";\nimport { EditOutlined, CloseOutlined, PlusOutlined, MinusCircleOutlined } from \"@ant-design/icons\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 20\n    }\n  }\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 20,\n      offset: 4\n    }\n  }\n};\n\nfunction onFinish() {\n  console.log(\"s\");\n}\n\nvar j = 0;\nexport default function MyRegistationPage() {\n  _s();\n\n  //   const [fileList, setFilelist] = useState<any[]>();\n  //   const [uploading, setUploading] = useState(false);\n  //   function handleUpload() {\n  //     const formData = new FormData();\n  //     setFilelist(() => {\n  //       if (fileList && formData)\n  //         fileList.forEach((file) => {\n  //           formData.append(\"files[]\", file);\n  //         });\n  //       return fileList;\n  //     });\n  //     setUploading(true);\n  //   }\n  let {\n    eId\n  } = useParams();\n  const [componentSize, setComponentSize] = useState('default');\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    setComponentSize(size);\n  };\n\n  var i;\n\n  for (i = 0; i < UserEvents.length; i++) {\n    if (eId.localeCompare(UserEvents[i][\"name\"]) == 0) break;\n  }\n\n  const {\n    fontSize,\n    ref\n  } = useFitText({\n    maxFontSize: 500,\n    minFontSize: 100\n  });\n  console.log(fontSize);\n  const [isEdit, setisEdit] = useState(false);\n  var [leader, setLeader] = useState(UserEvents[i][\"team\"][\"leader\"]);\n  var [members, setMembers] = useState(UserEvents[i][\"team\"][\"members\"]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      mainText: \"Event \" + eId,\n      showBack: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myreg-status\",\n      ref: ref,\n      style: {\n        fontSize\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"myreg-bold\",\n        children: \"Registration Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [UserEvents[i][\"status\"], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"announcement\",\n      ref: ref,\n      style: {\n        fontSize\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Announcement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: UserEvents[i][\"announcement\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), !isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team\",\n      ref: ref,\n      style: {\n        fontSize\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Team Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Leader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"teammembers\",\n        children: UserEvents[i][\"team\"][\"leader\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), UserEvents[i][\"team\"][\"members\"].map(name => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"teammembers\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        onClick: () => setisEdit(true),\n        icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team\",\n      ref: ref,\n      style: {\n        fontSize\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        shape: \"circle\",\n        onClick: () => setisEdit(false),\n        icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        labelCol: {\n          span: 4\n        },\n        wrapperCol: {\n          span: 14\n        },\n        layout: \"horizontal\",\n        initialValues: {\n          size: componentSize\n        },\n        onValuesChange: onFormLayoutChange,\n        size: componentSize,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Leader\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: leader,\n            onChange: e => setLeader(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        name: \"dynamic_form_item\",\n        ...formItemLayoutWithOutLabel,\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.List, {\n          name: \"names\",\n          rules: [{\n            validator: async (_, names) => {\n              if (!names || names.length < 2) {\n                return Promise.reject(new Error('At least 2 passengers'));\n              }\n            }\n          }],\n          children: (members, {\n            add,\n            remove\n          }, {\n            errors\n          }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [members.map((field, index) => /*#__PURE__*/_createElement(Form.Item, { ...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel),\n              label: index === 0 ? 'Passengers' : '',\n              required: false,\n              key: field.key,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n              validateTrigger: ['onChange', 'onBlur'],\n              rules: [{\n                required: true,\n                whitespace: true,\n                message: \"Please input passenger's name or delete this field.\"\n              }],\n              noStyle: true,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                placeholder: \"passenger name\",\n                style: {\n                  width: '60%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 23\n            }, this), members.length > 1 ? /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n              className: \"dynamic-delete-button\",\n              onClick: () => remove(field.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 25\n            }, this) : null)), /*#__PURE__*/_jsxDEV(Form.Item, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"dashed\",\n                onClick: () => add(),\n                style: {\n                  width: '60%'\n                },\n                icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 29\n                }, this),\n                children: \"Add field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"dashed\",\n                onClick: () => {\n                  add('The head item', 0);\n                },\n                style: {\n                  width: '60%',\n                  marginTop: '20px'\n                },\n                icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 29\n                }, this),\n                children: \"Add field at head\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.ErrorList, {\n                errors: errors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyRegistationPage, \"0Tr/ShU65HI9kGATOQakJSAfQvs=\", false, function () {\n  return [useParams, useFitText];\n});\n\n_c = MyRegistationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRegistationPage\");","map":{"version":3,"sources":["D:/prgm/Web-dev/Ragam21/r21/ragam21/src/Screens/MyRegistrationPage/MyRegistrationPage.tsx"],"names":["React","useState","Header","UserEvents","Button","Form","Input","useFitText","EditOutlined","CloseOutlined","PlusOutlined","MinusCircleOutlined","useParams","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","onFinish","console","log","j","MyRegistationPage","eId","componentSize","setComponentSize","onFormLayoutChange","size","i","length","localeCompare","fontSize","ref","maxFontSize","minFontSize","isEdit","setisEdit","leader","setLeader","members","setMembers","map","name","e","target","value","validator","_","names","Promise","reject","Error","add","remove","errors","field","index","key","required","whitespace","message","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from '../../Components/Header/Header';\r\nimport UserEvents from \"../../data1\";\r\nimport { Upload, Button, message, Form, Input } from \"antd\";\r\nimport useFitText from \"use-fit-text\";\r\nimport { EditOutlined, UploadOutlined, CloseOutlined, PlusOutlined, MinusCircleOutlined } from \"@ant-design/icons\";\r\nimport { useParams, Link } from 'react-router-dom';\r\ninterface ParamTypes {\r\n  eId: string\r\n}\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 20 },\r\n  },\r\n};\r\n\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: { span: 24, offset: 0 },\r\n    sm: { span: 20, offset: 4 },\r\n  },\r\n};\r\n\r\nfunction onFinish(){\r\n  console.log(\"s\")\r\n}\r\n\r\nvar j = 0;\r\nexport default function MyRegistationPage() {\r\n  //   const [fileList, setFilelist] = useState<any[]>();\r\n  //   const [uploading, setUploading] = useState(false);\r\n  //   function handleUpload() {\r\n  //     const formData = new FormData();\r\n\r\n  //     setFilelist(() => {\r\n  //       if (fileList && formData)\r\n  //         fileList.forEach((file) => {\r\n  //           formData.append(\"files[]\", file);\r\n  //         });\r\n\r\n  //       return fileList;\r\n  //     });\r\n\r\n  //     setUploading(true);\r\n  //   }\r\n  let { eId } = useParams<ParamTypes>();\r\n  type SizeType = Parameters<typeof Form>[0]['size'];\r\n  const [componentSize, setComponentSize] = useState<SizeType | 'default'>('default');\r\n  const onFormLayoutChange = ({ size }: { size: SizeType }) => {\r\n    setComponentSize(size);\r\n  };\r\n  var i;\r\n  for (i = 0; i < UserEvents.length; i++) {\r\n    if (eId.localeCompare(UserEvents[i][\"name\"]) == 0)\r\n      break;\r\n  }\r\n  const { fontSize, ref } = useFitText({ maxFontSize: 500, minFontSize: 100 });\r\n  console.log(fontSize);\r\n  const [isEdit, setisEdit] = useState(false);\r\n  var [leader, setLeader] = useState(UserEvents[i][\"team\"][\"leader\"]);\r\n  var [members ,setMembers]=useState(UserEvents[i][\"team\"][\"members\"]);\r\n\r\n  return (\r\n    <div>\r\n      <Header mainText={\"Event \" + eId} showBack={true} />\r\n      <div className=\"myreg-status\" ref={ref} style={{ fontSize }}>\r\n        <p className=\"myreg-bold\" >Registration Status: </p>\r\n        <p>{UserEvents[i][\"status\"]} </p>\r\n      </div>\r\n      <div className=\"announcement\" ref={ref} style={{ fontSize }}>\r\n        <h6>Announcement</h6>\r\n        <p>{UserEvents[i][\"announcement\"]}</p>\r\n      </div>\r\n      {!isEdit ? <div className=\"team\" ref={ref} style={{ fontSize }}>\r\n        <h6>Team Details</h6>\r\n        <h5>Leader</h5>\r\n        <p className=\"teammembers\">{UserEvents[i][\"team\"][\"leader\"]}</p>\r\n        <h5>Members</h5>\r\n        {UserEvents[i][\"team\"][\"members\"].map((name) => (\r\n          <p className=\"teammembers\">{name}</p>\r\n        ))}\r\n        <Button className=\"button\" onClick={() => setisEdit(true)} icon={<EditOutlined />} />\r\n      </div> :\r\n        <div className=\"team\" ref={ref} style={{ fontSize }}>\r\n          <Button shape='circle' onClick={() => setisEdit(false)} icon={<CloseOutlined />} />\r\n          <Form\r\n            labelCol={{ span: 4 }}\r\n            wrapperCol={{ span: 14 }}\r\n            layout=\"horizontal\"\r\n            initialValues={{ size: componentSize }}\r\n            onValuesChange={onFormLayoutChange}\r\n            size={componentSize as SizeType}\r\n          >\r\n            <Form.Item label=\"Leader\">\r\n              <Input value={leader} onChange={(e) => setLeader(e.target.value)} />\r\n            </Form.Item>\r\n          </Form>\r\n\r\n\r\n          <Form name=\"dynamic_form_item\" {...formItemLayoutWithOutLabel} onFinish={onFinish}>\r\n            <Form.List\r\n              name=\"names\"\r\n              rules={[\r\n                {\r\n                  validator: async (_, names) => {\r\n                    if (!names || names.length < 2) {\r\n                      return Promise.reject(new Error('At least 2 passengers'));\r\n                    }\r\n                  },\r\n                },\r\n              ]}\r\n            >\r\n              {(members, { add, remove }, { errors }) => (\r\n                <>\r\n                  {members.map((field, index) => (\r\n                    <Form.Item\r\n                      {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                      label={index === 0 ? 'Passengers' : ''}\r\n                      required={false}\r\n                      key={field.key}\r\n                    >\r\n                      <Form.Item\r\n                        {...field}\r\n                        validateTrigger={['onChange', 'onBlur']}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            whitespace: true,\r\n                            message: \"Please input passenger's name or delete this field.\",\r\n                          },\r\n                        ]}\r\n                        noStyle\r\n                      >\r\n                        <Input placeholder=\"passenger name\" style={{ width: '60%' }} />\r\n                      </Form.Item>\r\n                      {members.length > 1 ? (\r\n                        <MinusCircleOutlined\r\n                          className=\"dynamic-delete-button\"\r\n                          onClick={() => remove(field.name)}\r\n                        />\r\n                      ) : null}\r\n                    </Form.Item>\r\n                  ))}\r\n                  <Form.Item>\r\n                    <Button\r\n                      type=\"dashed\"\r\n                      onClick={() => add()}\r\n                      style={{ width: '60%' }}\r\n                      icon={<PlusOutlined />}\r\n                    >\r\n                      Add field\r\n              </Button>\r\n                    <Button\r\n                      type=\"dashed\"\r\n                      onClick={() => {\r\n                        add('The head item', 0);\r\n                      }}\r\n                      style={{ width: '60%', marginTop: '20px' }}\r\n                      icon={<PlusOutlined />}\r\n                    >\r\n                      Add field at head\r\n              </Button>\r\n                    <Form.ErrorList errors={errors} />\r\n                  </Form.Item>\r\n                </>\r\n              )}\r\n            </Form.List>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n\r\n\r\n        </div>\r\n      }\r\n      {/* need to do it later!!\r\n       <div className=\"submission\">\r\n        <h6>Submission</h6>\r\n        <Upload action= 'https://www.mocky.io/v2/5cc8019d300000980a055e76' onChange= {handleChange} multiple= {true}>\r\n          <Button icon={<UploadOutlined />}>Select File</Button>\r\n        </Upload>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleUpload}\r\n          disabled={fileList === []}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? \"Uploading\" : \"Start Upload\"}\r\n        </Button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}