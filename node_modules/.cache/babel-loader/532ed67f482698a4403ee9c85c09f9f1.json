{"ast":null,"code":"var _jsxFileName = \"D:\\\\prgm\\\\Web-dev\\\\Ragam21\\\\r21\\\\ragam21\\\\src\\\\Screens\\\\MyRegistrationPage\\\\MyRegistrationPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from '../../Components/Header/Header';\nimport UserEvents from \"../../data1\";\nimport { Button, Form, Input } from \"antd\";\nimport useFitText from \"use-fit-text\";\nimport { EditOutlined, CloseOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar j = 0;\nexport default function MyRegistationPage() {\n  _s();\n\n  //   const [fileList, setFilelist] = useState<any[]>();\n  //   const [uploading, setUploading] = useState(false);\n  //   function handleUpload() {\n  //     const formData = new FormData();\n  //     setFilelist(() => {\n  //       if (fileList && formData)\n  //         fileList.forEach((file) => {\n  //           formData.append(\"files[]\", file);\n  //         });\n  //       return fileList;\n  //     });\n  //     setUploading(true);\n  //   }\n  let {\n    eId\n  } = useParams();\n  const [componentSize, setComponentSize] = useState('default');\n\n  const onFormLayoutChange = ({\n    size\n  }) => {\n    setComponentSize(size);\n  };\n\n  var i;\n\n  for (i = 0; i < UserEvents.length; i++) {\n    if (eId.localeCompare(UserEvents[i][\"name\"]) == 0) break;\n  }\n\n  const {\n    fontSize,\n    ref\n  } = useFitText({\n    maxFontSize: 500,\n    minFontSize: 100\n  });\n  console.log(fontSize);\n  const [isEdit, setisEdit] = useState(false);\n  var [leader, setLeader] = useState(UserEvents[i][\"team\"][\"leader\"]);\n  var [members, setMember] = useState(UserEvents[i][\"team\"][\"members\"]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      mainText: \"Event \" + eId,\n      showBack: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myreg-status\",\n      ref: ref,\n      style: {\n        fontSize\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"myreg-bold\",\n        children: \"Registration Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [UserEvents[i][\"status\"], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"announcement\",\n      ref: ref,\n      style: {\n        fontSize\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Announcement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: UserEvents[i][\"announcement\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), !isEdit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team\",\n      ref: ref,\n      style: {\n        fontSize\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Team Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Leader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"teammembers\",\n        children: UserEvents[i][\"team\"][\"leader\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), UserEvents[i][\"team\"][\"members\"].map(name => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"teammembers\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        onClick: () => setisEdit(true),\n        icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team\",\n      ref: ref,\n      style: {\n        fontSize\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        shape: \"circle\",\n        onClick: () => setisEdit(false),\n        icon: /*#__PURE__*/_jsxDEV(CloseOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        labelCol: {\n          span: 4\n        },\n        wrapperCol: {\n          span: 14\n        },\n        layout: \"horizontal\",\n        initialValues: {\n          size: componentSize\n        },\n        onValuesChange: onFormLayoutChange,\n        size: componentSize,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Leader\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: leader,\n            onChange: e => setLeader(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), members.map((member, index) => /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: index === 0 ? 'Members' : '',\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: member,\n            onChange: e => setMember([members[index] = e.target.value])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"dashed\",\n          onClick: () => setMember([...members, members[members.length] = '']),\n          style: {\n            width: '60%'\n          },\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 23\n          }, this),\n          children: \"Add field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyRegistationPage, \"2RM39iN4LiT4rz8dWTuaGDrPA3Y=\", false, function () {\n  return [useParams, useFitText];\n});\n\n_c = MyRegistationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRegistationPage\");","map":{"version":3,"sources":["D:/prgm/Web-dev/Ragam21/r21/ragam21/src/Screens/MyRegistrationPage/MyRegistrationPage.tsx"],"names":["React","useState","Header","UserEvents","Button","Form","Input","useFitText","EditOutlined","CloseOutlined","PlusOutlined","useParams","j","MyRegistationPage","eId","componentSize","setComponentSize","onFormLayoutChange","size","i","length","localeCompare","fontSize","ref","maxFontSize","minFontSize","console","log","isEdit","setisEdit","leader","setLeader","members","setMember","map","name","span","e","target","value","member","index","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from '../../Components/Header/Header';\r\nimport UserEvents from \"../../data1\";\r\nimport { Upload, Button, message, Form, Input } from \"antd\";\r\nimport useFitText from \"use-fit-text\";\r\nimport { EditOutlined, UploadOutlined, CloseOutlined, PlusOutlined, MinusOutlined } from \"@ant-design/icons\";\r\nimport { useParams, Link } from 'react-router-dom';\r\ninterface ParamTypes {\r\n  eId: string\r\n}\r\n\r\n\r\nvar j = 0;\r\nexport default function MyRegistationPage() {\r\n  //   const [fileList, setFilelist] = useState<any[]>();\r\n  //   const [uploading, setUploading] = useState(false);\r\n  //   function handleUpload() {\r\n  //     const formData = new FormData();\r\n\r\n  //     setFilelist(() => {\r\n  //       if (fileList && formData)\r\n  //         fileList.forEach((file) => {\r\n  //           formData.append(\"files[]\", file);\r\n  //         });\r\n\r\n  //       return fileList;\r\n  //     });\r\n\r\n  //     setUploading(true);\r\n  //   }\r\n  let { eId } = useParams<ParamTypes>();\r\n  type SizeType = Parameters<typeof Form>[0]['size'];\r\n  const [componentSize, setComponentSize] = useState<SizeType | 'default'>('default');\r\n  const onFormLayoutChange = ({ size }: { size: SizeType }) => {\r\n    setComponentSize(size);\r\n  };\r\n  var i;\r\n  for (i = 0; i < UserEvents.length; i++) {\r\n    if (eId.localeCompare(UserEvents[i][\"name\"]) == 0)\r\n      break;\r\n  }\r\n  const { fontSize, ref } = useFitText({ maxFontSize: 500, minFontSize: 100 });\r\n  console.log(fontSize);\r\n  const [isEdit, setisEdit] = useState(false);\r\n  var [leader, setLeader] = useState(UserEvents[i][\"team\"][\"leader\"]);\r\n  var [members, setMember] = useState(UserEvents[i][\"team\"][\"members\"]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header mainText={\"Event \" + eId} showBack={true} />\r\n      <div className=\"myreg-status\" ref={ref} style={{ fontSize }}>\r\n        <p className=\"myreg-bold\" >Registration Status: </p>\r\n        <p>{UserEvents[i][\"status\"]} </p>\r\n      </div>\r\n      <div className=\"announcement\" ref={ref} style={{ fontSize }}>\r\n        <h6>Announcement</h6>\r\n        <p>{UserEvents[i][\"announcement\"]}</p>\r\n      </div>\r\n      {!isEdit ? <div className=\"team\" ref={ref} style={{ fontSize }}>\r\n        <h6>Team Details</h6>\r\n        <h5>Leader</h5>\r\n        <p className=\"teammembers\">{UserEvents[i][\"team\"][\"leader\"]}</p>\r\n        <h5>Members</h5>\r\n        {UserEvents[i][\"team\"][\"members\"].map((name) => (\r\n          <p className=\"teammembers\">{name}</p>\r\n        ))}\r\n        <Button className=\"button\" onClick={() => setisEdit(true)} icon={<EditOutlined />} />\r\n      </div> :\r\n        <div className=\"team\" ref={ref} style={{ fontSize }}>\r\n          <Button shape='circle' onClick={() => setisEdit(false)} icon={<CloseOutlined />} />\r\n          <Form\r\n            labelCol={{ span: 4 }}\r\n            wrapperCol={{ span: 14 }}\r\n            layout=\"horizontal\"\r\n            initialValues={{ size: componentSize }}\r\n            onValuesChange={onFormLayoutChange}\r\n            size={componentSize as SizeType}\r\n          >\r\n            <Form.Item label=\"Leader\">\r\n              <Input value={leader} onChange={(e) => setLeader(e.target.value)} />\r\n            </Form.Item>\r\n            {\r\n              members.map((member, index) => (\r\n                <Form.Item label={index===0?'Members':''}>\r\n                  <Input value={member} onChange={(e) => setMember([members[index]=e.target.value])} />\r\n                </Form.Item>\r\n              ))\r\n            }\r\n            <Button\r\n                type=\"dashed\"\r\n                onClick={() => setMember([...members,members[members.length]=''])}\r\n                style={{ width: '60%' }}\r\n                icon={<PlusOutlined />}\r\n              >\r\n                Add field\r\n              </Button>\r\n\r\n          </Form>\r\n        </div>\r\n      }\r\n      {/* need to do it later!!\r\n       <div className=\"submission\">\r\n        <h6>Submission</h6>\r\n        <Upload action= 'https://www.mocky.io/v2/5cc8019d300000980a055e76' onChange= {handleChange} multiple= {true}>\r\n          <Button icon={<UploadOutlined />}>Select File</Button>\r\n        </Upload>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleUpload}\r\n          disabled={fileList === []}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? \"Uploading\" : \"Start Upload\"}\r\n        </Button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}