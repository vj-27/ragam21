{"ast":null,"code":"var _jsxFileName = \"D:\\\\prgm\\\\Web-dev\\\\Ragam21\\\\r21\\\\ragam21\\\\src\\\\Screens\\\\MyRegistrationPage\\\\MyRegistrationPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from '../../Components/Header/Header';\nimport UserEvents from \"../../data1\";\nimport { Button } from \"antd\";\nimport useFitText from \"use-fit-text\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar j = 0;\nexport default function MyRegistationPage() {\n  _s();\n\n  //   const [fileList, setFilelist] = useState<any[]>();\n  //   const [uploading, setUploading] = useState(false);\n  //   function handleUpload() {\n  //     const formData = new FormData();\n  //     setFilelist(() => {\n  //       if (fileList && formData)\n  //         fileList.forEach((file) => {\n  //           formData.append(\"files[]\", file);\n  //         });\n  //       return fileList;\n  //     });\n  //     setUploading(true);\n  //   }\n  let {\n    eId\n  } = useParams();\n  var i;\n\n  for (i = 0; i < UserEvents.length; i++) {\n    if (eId.localeCompare(UserEvents[i][\"name\"]) == 0) break;\n  }\n\n  const {\n    fontSize,\n    ref\n  } = useFitText({\n    maxFontSize: 500,\n    minFontSize: 100\n  });\n  console.log(fontSize);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      mainText: \"Event \" + eId,\n      showBack: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myreg-status\",\n      ref: ref,\n      style: {\n        fontSize\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"myreg-bold\",\n        children: \"Registration Status: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [UserEvents[i][\"status\"], \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"announcement\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Announcement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: UserEvents[i][\"announcement\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Team Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Leader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"teammembers\",\n        children: UserEvents[i][\"team\"][\"leader\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), UserEvents[i][\"team\"][\"members\"].map(name => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"teammembers\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"button\",\n        icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyRegistationPage, \"rHOUhelmt9vVFaNBtp5ezbT4dSQ=\", false, function () {\n  return [useParams, useFitText];\n});\n\n_c = MyRegistationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyRegistationPage\");","map":{"version":3,"sources":["D:/prgm/Web-dev/Ragam21/r21/ragam21/src/Screens/MyRegistrationPage/MyRegistrationPage.tsx"],"names":["React","Header","UserEvents","Button","useFitText","EditOutlined","useParams","j","MyRegistationPage","eId","i","length","localeCompare","fontSize","ref","maxFontSize","minFontSize","console","log","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAAiBC,MAAjB,QAAwC,MAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,YAAT,QAA6C,mBAA7C;AACA,SAAQC,SAAR,QAA6B,kBAA7B;;AAMA,IAAIC,CAAC,GAAG,CAAR;AACA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC5C;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACE,MAAI;AAAEC,IAAAA;AAAF,MAAUH,SAAS,EAAvB;AACA,MAAII,CAAJ;;AACA,OAAIA,CAAC,GAAC,CAAN,EAAQA,CAAC,GAACR,UAAU,CAACS,MAArB,EAA4BD,CAAC,EAA7B,EAAgC;AAC9B,QAAGD,GAAG,CAACG,aAAJ,CAAkBV,UAAU,CAACQ,CAAD,CAAV,CAAc,MAAd,CAAlB,KAA0C,CAA7C,EACE;AACH;;AACD,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAoBV,UAAU,CAAC;AAAEW,IAAAA,WAAW,EAAE,GAAf;AAAoBC,IAAAA,WAAW,EAAE;AAAjC,GAAD,CAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,sBACE;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,WAAUJ,GAA5B;AAAiC,MAAA,QAAQ,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,YADA,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA+B,MAAA,GAAG,EAAEK,GAApC;AAAyC,MAAA,KAAK,EAAE;AAAED,QAAAA;AAAF,OAAhD;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAIX,UAAU,CAACQ,CAAD,CAAV,CAAc,QAAd,CAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIR,UAAU,CAACQ,CAAD,CAAV,CAAc,cAAd;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,kBAA4BR,UAAU,CAACQ,CAAD,CAAV,CAAc,MAAd,EAAsB,QAAtB;AAA5B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,EAKGR,UAAU,CAACQ,CAAD,CAAV,CAAc,MAAd,EAAsB,SAAtB,EAAiCS,GAAjC,CAAsCC,IAAD,iBACpC;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,kBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,cADD,CALH,eAQE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAhEuBZ,iB;UAiBRF,S,EAMYF,U;;;KAvBJI,iB","sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from '../../Components/Header/Header';\r\nimport UserEvents from \"../../data1\";\r\nimport { Upload, Button, message } from \"antd\";\r\nimport useFitText from \"use-fit-text\";\r\nimport { EditOutlined, UploadOutlined } from \"@ant-design/icons\";\r\nimport {useParams,Link} from 'react-router-dom';\r\ninterface ParamTypes {\r\n  eId: string\r\n}\r\n\r\n\r\nvar j = 0;\r\nexport default function MyRegistationPage() {\r\n//   const [fileList, setFilelist] = useState<any[]>();\r\n//   const [uploading, setUploading] = useState(false);\r\n//   function handleUpload() {\r\n//     const formData = new FormData();\r\n\r\n//     setFilelist(() => {\r\n//       if (fileList && formData)\r\n//         fileList.forEach((file) => {\r\n//           formData.append(\"files[]\", file);\r\n//         });\r\n\r\n//       return fileList;\r\n//     });\r\n\r\n//     setUploading(true);\r\n//   }\r\n  let { eId } = useParams<ParamTypes>();\r\n  var i;\r\n  for(i=0;i<UserEvents.length;i++){\r\n    if(eId.localeCompare(UserEvents[i][\"name\"])==0)\r\n      break;\r\n  }\r\n  const { fontSize, ref } = useFitText({ maxFontSize: 500, minFontSize: 100 });\r\n  console.log(fontSize);\r\n  return (\r\n    <div>\r\n    <Header mainText={\"Event \"+ eId} showBack={true}/>\r\n      <div className=\"myreg-status\"  ref={ref} style={{ fontSize }}>\r\n        <p className=\"myreg-bold\" >Registration Status: </p>\r\n        <p>{UserEvents[i][\"status\"]} </p>\r\n      </div>\r\n      <div className=\"announcement\">\r\n        <h6>Announcement</h6>\r\n        <p>{UserEvents[i][\"announcement\"]}</p>\r\n      </div>\r\n      <div className=\"team\">\r\n        <h6>Team Details</h6>\r\n        <h5>Leader</h5>\r\n        <p className=\"teammembers\">{UserEvents[i][\"team\"][\"leader\"]}</p>\r\n        <h5>Members</h5>\r\n        {UserEvents[i][\"team\"][\"members\"].map((name) => (\r\n          <p className=\"teammembers\">{name}</p>\r\n        ))}\r\n        <Button className=\"button\" icon={<EditOutlined />} />\r\n      </div>\r\n      {/* need to do it later!!\r\n       <div className=\"submission\">\r\n        <h6>Submission</h6>\r\n        <Upload action= 'https://www.mocky.io/v2/5cc8019d300000980a055e76' onChange= {handleChange} multiple= {true}>\r\n          <Button icon={<UploadOutlined />}>Select File</Button>\r\n        </Upload>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleUpload}\r\n          disabled={fileList === []}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? \"Uploading\" : \"Start Upload\"}\r\n        </Button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}